<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.co.doublecome.repository.mapper.AdminMapper">
<!-- 유저 검색 쿼리 -->
	<select id="selectUserForAdmin" parameterType="SearchUser"
		resultType="User">
		select full.*,
			   count(*) over() as user_cnt	
		  from (select distinct
					   u.*,
					   <if test="type != null">
						   ifnull(user_reported_cnt,0) as user_reported_cnt,
					   </if>
					   ifnull(cnt1,0) + ifnull(cnt2,0) as user_deal_cnt
				  from user u
				  left outer join (select deal.user_email_buyer,
										  count(*) over(partition by deal.user_email_buyer) as cnt1
									 from deal) d1
					on u.user_email = d1.user_email_buyer
				  left outer join (select deal.user_email_seller,
										  count(*) over(partition by deal.user_email_seller) as cnt2
									 from deal) d2
					on u.user_email = d2.user_email_seller	
					
					<if test="type != null">
		 		  left outer join (select report_receiver,             
								    count(*) over(partition by report_receiver) as user_reported_cnt           
                                	 from report) r      
		    	  	on u.user_email = r.report_receiver	
		 			</if>
					
					
					) full
					
		 <where>
		 		<if test="type != null">
		 			and user_reported_cnt > 0
		 			<choose>
						<when test="startReportedCnt!= null and endReportedCnt != null">
							and user_reported_cnt between #{startReportedCnt} and #{endReportedCnt}
						</when>
						<when test="startReportedCnt == null and endReportedCnt != null">
							and user_reported_cnt <![CDATA[<]]>= #{endReportedCnt}
						</when>
						<when test="startReportedCnt != null and endReportedCnt == null">
							and user_reported_cnt <![CDATA[>]]>= #{startReportedCnt} 
						</when>
					</choose>
		 		</if>
		 		
					<choose>
						<when test="startScore != null and endScore != null">
							and user_score between #{startScore} and #{endScore}
						</when>
						<when test="startScore == null and endScore != null">
							and user_score <![CDATA[<]]>= #{endScore}
						</when>
						<when test="startScore != null and endScore == null">
							and user_score <![CDATA[>]]>= #{startScore} 
						</when>
					</choose>
					
					<choose>
						<when test="startDealCnt != null and endDealCnt != null">
							and user_deal_cnt between #{startDealCnt} and #{endDealCnt}
						</when>
						<when test="startDealCnt == null and endDealCnt != null">
							and user_deal_cnt <![CDATA[<]]> #{endDealCnt} + 1
						</when>
						<when test="startDealCnt != null and endDealCnt == null">
							and user_deal_cnt <![CDATA[>]]> #{startDealCnt} - 1  
						</when>
					</choose>
					
					<choose>
						<when test="startReviewCnt != null and endReviewCnt != null">
							and user_review_cnt between #{startReviewCnt} and #{endDealCnt}
						</when>
						<when test="startReviewCnt == null and endReviewCnt != null">
							and user_review_cnt <![CDATA[<]]> #{endReviewCnt} + 1
						</when>
						<when test="startReviewCnt != null and endReviewCnt == null">
							and user_review_cnt <![CDATA[>]]> #{startReviewCnt} - 1 
						</when>
					</choose>
					
				<choose>
					<when test="searchType == 'userEmail'">
						and	user_email like CONCAT('%',#{keyword},'%')
					</when>
					<when test="searchType == 'userNickname'">
						and	user_nickname like CONCAT('%',#{keyword},'%')
					</when>
					<when test="searchType == 'userPhnum'">
						and	user_phnum like CONCAT('%',#{keyword},'%')
					</when>						
				</choose>
		</where>			
		
		<choose>
			<when test='sort == "userEamil"'>
				order by user_email		
			</when>
			<when test='sort == "userNickname"'>
				order by user_nickname		
			</when>
			<when test='sort == "userDealCnt"'>
				order by user_deal_cnt desc		
			</when>
			<when test='sort == "userReviewCnt"'>
				order by user_review_cnt desc		
			</when>
			<when test='sort == "userReportedCnt"'>
				order by user_reported_cnt desc		
			</when>
		</choose>
		
		limit #{begin},#{listSize}
	</select>
	
<!-- 신고 조회 -->
	<select id="selectReportByUserEmail" parameterType="SearchUser" resultType="Report">
		select *, 
		 	   count(*) over() as report_cnt,
         	   rt.report_type_name
		  from report r
  		 inner join report_type rt
	  	    on r.report_type_code = rt.report_type_code  
		 where report_receiver = #{keyword}
		 limit #{begin},#{listSize}
	</select>
	
<!-- 유저 삭제 -->	
	<delete id="deleteUser" parameterType="java.util.List" >
		delete
		  from user
		 where user_email in 
		 <foreach collection="list" item="userEmail" open="(" close=")" separator=",">
		 	#{userEmail}
		 </foreach>  
	</delete>


<!-- 경매 검색 쿼리 -->
	<select id="selectAuctionForAdmin" parameterType="SearchAuction" resultType="Auction">
		select a.*,
	   		   count(*) over() as auction_cnt,
       	  	   ifnull(bid_price,0) as bid_price,
       	  	   c.category_name
  	      from auction a
  		  left outer join (select distinct max(bid_price) over(partition by auction_no) as bid_price,
						          auction_no 
			   			     from bid ) d
    	    on a.auction_no = d.auction_no
    	 inner join category c
            on a.category_code = c.category_code  
  		 
  		 <where>
  		 
  		 	<choose>
				<when test="startPrice != null and endPrice != null">
					and bid_price between #{startPrice} and #{endPrice}
				</when>
				<when test="startPrice == null and endPrice != null">
					and bid_price <![CDATA[<]]>= #{endPrice}
				</when>
				<when test="startPrice != null and endPrice == null">
					and bid_price <![CDATA[>]]>= #{startPrice} 
				</when>
			</choose>
			
			<choose>
				<when test="startLimitDate != null and endLimitDate != null">
					and auction_limit_date between #{startLimitDate} and #{endLimitDate}
				</when>
				<when test="startLimitDate == null and endLimitDate != null">
					and auction_limit_date <![CDATA[<]]>= #{endLimitDate}
				</when>
				<when test="startLimitDate != null and endLimitDate == null">
					and auction_limit_date <![CDATA[>]]>= #{startLimitDate} 
				</when>
			</choose>
  		 	
  		  		and a.category_code in 
  		  		<foreach collection="categories" item="staff" open="(" close=")" separator=",">
		 			#{staff}
				 </foreach> 
  		 
  		 	<choose>
					<when test="searchType == 'auctionNo'">
						and	a.auction_no like CONCAT('%',#{keyword},'%')
					</when>
					<when test="searchType == 'auctionTitle'">
						and	a.auction_title like CONCAT('%',#{keyword},'%')
					</when>
					<when test="searchType == 'userEmail'">
						and	a.user_email like CONCAT('%',#{keyword},'%')
					</when>						
				</choose>
  		 </where>
  		 
  		 <choose>
			<when test='sort == "auctionNo"'>
				order by a.auction_no		
			</when>
			<when test='sort == "userEmail"'>
				order by user_email		
			</when>
			<when test='sort == "bidPrice"'>
				order by bid_price desc		
			</when>
			<when test='sort == "auctionLimitDate"'>
				order by a.auction_limit_date		
			</when>
		</choose>
  		 
  		 limit #{begin},#{listSize}
	</select>

</mapper>